version: '3.7'
services:
    nextcloud-db:
        image: mariadb:latest
        container_name: nextcloud-db
        command: --transaction-isolation=READ-COMMITTED --log-bin=ROW --skip-innodb-read-only-compressed
        restart: unless-stopped
        security_opt:
          - no-new-privileges:true
        volumes:
            - ./mysql-data:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} # MYSQL ROOT PASSWORD
            MYSQL_PASSWORD: ${MYSQL_PASSWORD} # PASSWORD OF MYSQL USER
            MYSQL_DATABASE: ${MYSQL_DATABASE} # MYSQL DATABASE
            MYSQL_USER: ${MYSQL_USER} # MYSQL USERNAME
        networks:
            - default

    nextcloud-redis:
        image: redis:alpine
        container_name: nextcloud-redis
        hostname: nextcloud-redis
        restart: unless-stopped
        security_opt:
          - no-new-privileges:true
        command: redis-server --requirepass ${REDIS_HOST_PASSWORD} # REPLACE WITH REDIS PASSWORD
        networks:
            - default
    
    nextcloud-app:
        image: nextcloud
        container_name: nextcloud-app
        restart: unless-stopped
        security_opt:
          - no-new-privileges:true
        depends_on:
            - nextcloud-db
            - nextcloud-redis
        environment:
            REDIS_HOST: ${REDIS_HOST}
            REDIS_HOST_PASSWORD: ${REDIS_HOST_PASSWORD} # REPLACE WITH REDIS PASSWORD
            MYSQL_HOST: ${MYSQL_HOST}
            MYSQL_USER: ${MYSQL_USER} # MYSQL USERNAME
            MYSQL_PASSWORD: ${MYSQL_PASSWORD} # PASSWORD OF MYSQL USER
            MYSQL_DATABASE: ${MYSQL_DATABASE} # MYSQL DATABASE
        volumes:
            - ./nextcloud:/var/www/html
        ports:
            - 4443:443
            - 4444:80
        labels:
            traefik.enable: true
            traefik.docker.network: proxy
            traefik.http.routers.nextcloud.entrypoints: http
            traefik.http.routers.nextcloud.rule: Host(`cloud.${DOMAIN}`)
            traefik.http.routers.nextcloud-secure.entrypoints: https
            traefik.http.routers.nextcloud-secure.tls: true
            traefik.http.routers.nextcloud-secure.rule: Host(`cloud.${DOMAIN}`)
            traefik.http.routers.nextcloud.middlewares: nc-rep, nc-header
            traefik.http.routers.nextcloud-secure.middlewares: nc-header, https-redirect
            traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
            traefik.http.middlewares.nc-rep.redirectRegex.permanent: 'true'
            traefik.http.middlewares.nc-rep.redirectRegex.regex: https://(.*)/.well-known/(card|cal)dav
            traefik.http.middlewares.nc-rep.redirectRegex.replacement: https://$$1/remote.php/dav/
            traefik.http.middlewares.nc-header.headers.frameDeny: true
            traefik.http.middlewares.nc-header.headers.sslRedirect: true
            traefik.http.middlewares.nc-header.headers.contentTypeNosniff: true
            traefik.http.middlewares.nc-header.headers.stsIncludeSubdomains: true
            traefik.http.middlewares.nc-header.headers.stsPreload: true
            traefik.http.middlewares.nc-header.headers.stsSeconds: 31536000
            traefik.http.middlewares.nc-header.headers.referrerPolicy: same-origin
            traefik.http.middlewares.nc-header.headers.browserXssFilter: true
            traefik.http.middlewares.nc-header.headers.customRequestHeaders.X-Forwarded-Proto: https
            traefik.http.middlewares.nc-header.headers.customResponseHeaders.X-Robots-Tag: none
            traefik.http.middlewares.nc-header.headers.customFrameOptionsValue: SAMEORIGIN
            traefik.http.routers.nextcloud-secure.service: nextcloud
            traefik.http.services.nextcloud.loadbalancer.server.port: 80
            traefik.http.services.nextcloud.loadbalancer.passHostHeader: true
        networks:
            - proxy
            - default

networks:
  proxy:
    external: true